name: Lint

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "**.ts"
      - "**.tsx"
      - "**.js"
      - "**.jsx"
      - "package.json"
      - "yarn.lock"
    branches: [main, develop]

permissions:
  pull-requests: write
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        continue-on-error: true
        run: |
          npx next lint --format json --output-file lint_output.json
          echo "HAS_LINT_OUTPUT=true" >> $GITHUB_ENV

      - name: Analyze Results
        if: env.HAS_LINT_OUTPUT == 'true'
        run: |
          # Áµ±Ë®àÊÉÖÂ†±„ÇíÈõÜË®à
          STATS=$(jq -r '
            reduce .[] as $file (
              {"error": 0, "warning": 0};
              .error += $file.errorCount |
              .warning += $file.warningCount
            )
          ' lint_output.json)

          echo "TOTAL_ERRORS=$(echo $STATS | jq -r '.error')" >> $GITHUB_ENV
          echo "TOTAL_WARNINGS=$(echo $STATS | jq -r '.warning')" >> $GITHUB_ENV

      - name: Comment PR
        if: env.HAS_LINT_OUTPUT == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const errors = parseInt(process.env.TOTAL_ERRORS || '0');
            const warnings = parseInt(process.env.TOTAL_WARNINGS || '0');

            const status = errors === 0 ? '‚úÖ Passed' : '‚ùå Failed';

            const body = `## ESLint Check Results

            ### Status: ${status}

            üìä Summary:
            - üî¥ Errors: ${errors}
            - ‚ö†Ô∏è Warnings: ${warnings}
            - üìù Total Issues: ${errors + warnings}

            [View detailed log](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})

            *Executed at: ${new Date().toLocaleString('ja-JP', { timeZone: 'Asia/Tokyo' })}*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
