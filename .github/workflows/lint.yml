name: Lint

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "**.ts"
      - "**.tsx"
      - "**.js"
      - "**.jsx"
      - "package.json"
      - "yarn.lock"
    branches: [main, develop]

permissions:
  pull-requests: write
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        id: eslint
        continue-on-error: true
        run: |
          npx next lint --format json --output-file lint_output.json

          if [ -s lint_output.json ]; then
            # 統計情報を集計
            STATS=$(jq -r '
              reduce .[] as $file (
                {"error": 0, "warning": 0};
                .error += $file.errorCount |
                .warning += $file.warningCount
              )
            ' lint_output.json)

            echo "TOTAL_ERRORS=$(echo $STATS | jq -r '.error')" >> $GITHUB_ENV
            echo "TOTAL_WARNINGS=$(echo $STATS | jq -r '.warning')" >> $GITHUB_ENV
          else
            echo "TOTAL_ERRORS=0" >> $GITHUB_ENV
            echo "TOTAL_WARNINGS=0" >> $GITHUB_ENV
          fi

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          script: |
            const errors = parseInt(process.env.TOTAL_ERRORS || '0');
            const warnings = parseInt(process.env.TOTAL_WARNINGS || '0');
            const total = errors + warnings;

            let status, summary;

            if (total === 0) {
              status = '✅ All Clear';
              summary = '✨ Excellent! No linting issues found.';
            } else {
              status = errors > 0 ? '❌ Failed' : '⚠️ Passed with warnings';
              summary = `📊 Summary:
              - 🔴 Errors: ${errors}
              - ⚠️ Warnings: ${warnings}
              - 📝 Total Issues: ${total}`;
            }

            const body = `## ESLint Check Results

            ### Status: ${status}

            ${summary}

            [View detailed log](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})

            *Executed at: ${new Date().toLocaleString('ja-JP', { timeZone: 'Asia/Tokyo' })}*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
