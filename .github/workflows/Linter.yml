name: Lint

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "**.ts"
      - "**.tsx"
      - "**.js"
      - "**.jsx"
      - "package.json"
      - "yarn.lock"
    branches: [main, develop]

permissions:
  pull-requests: write
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        id: eslint
        continue-on-error: true
        run: |
          # エラーがあってもスクリプトを続行
          set +e

          npx next lint --format json --output-file lint_output.json
          LINT_EXIT_CODE=$?

          # エラー状態を環境変数として保存
          # echo "LINT_EXIT_CODE=${LINT_EXIT_CODE}" >> $GITHUB_ENV

          if [ -s lint_output.json ]; then
            # 統計情報を集計
            STATS=$(jq -r '
              reduce .[] as $file (
                {"error": 0, "warning": 0};
                .error += $file.errorCount |
                .warning += $file.warningCount
              )
            ' lint_output.json)

            echo "TOTAL_ERRORS=$(echo $STATS | jq -r '.error')" >> $GITHUB_ENV
            echo "TOTAL_WARNINGS=$(echo $STATS | jq -r '.warning')" >> $GITHUB_ENV
          else
            echo "TOTAL_ERRORS=0" >> $GITHUB_ENV
            echo "TOTAL_WARNINGS=0" >> $GITHUB_ENV
          fi

          # next lint の実行結果に基づいてステップの成功/失敗を決定
          exit $LINT_EXIT_CODE

      - name: Comment PR
        run: |
          ERRORS=${TOTAL_ERRORS:-0}
          WARNINGS=${TOTAL_WARNINGS:-0}
          TOTAL=$((ERRORS + WARNINGS))

          if [ $TOTAL -eq 0 ]; then
            STATUS="✅ All Clear"
            SUMMARY="✨ Excellent! No linting issues found."
          else
            if [ $ERRORS -gt 0 ]; then
              STATUS="❌ Failed"
            else
              STATUS="⚠️ Passed with warnings"
            fi
            SUMMARY="📊 Summary:
            - 🔴 Errors: $ERRORS
            - ⚠️ Warnings: $WARNINGS
            - 📝 Total Issues: $TOTAL"
          fi

          CURRENT_TIME=$(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M:%S')

          BODY=$(cat <<EOF
          ## ESLint Check Results

          ### Status: $STATUS

          $SUMMARY

          [View detailed log](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID})

          *Executed at: $CURRENT_TIME*
          EOF
          )

          gh auth token
          gh pr comment ${{ github.event.pull_request.number }} --body "$BODY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
